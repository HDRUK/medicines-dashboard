
name: Build and Deploy to Cloud Run

on:
  push:
    paths:
    - 'RELEASE.version'

env:
  PROJECT_ID: '${{ secrets.PROJECT_ID }}' # TODO: update Google Cloud project id.
  GAR_LOCATION: '${{ secrets.GAR_LOCATION }}' # TODO: update Artifact Registry location
  SERVICE: '${{ secrets.SERVICE_NAME }}' # TODO: update Cloud Run service name
  REGION: '${{ secrets.SERVICE_REGION }}' # TODO: update Cloud Run service region
  DOCKER_USER: '${{ secrets.DOCKER_AUTH_USER }}'

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}' # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      # - name: Docker Auth
      #   id: docker-auth
      #   uses: 'docker/login-action@v1'
      #   with:
      #     username: ${{ env.DOCKER_AUTH_USER }}
      #     password: '${{ steps.auth.outputs.access_token }}'
      #     registry: '${{ env.GAR_LOCATION }}-docker.pkg.dev'

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: europe-west1-docker.pkg.dev/hdruk-gateway-dev/hdruk-gateway-dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}"

      # END - Docker auth and build

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          # NOTE: If using a pre-built image, update the image name here
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      # If required, use the Cloud Run url output in later steps
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
