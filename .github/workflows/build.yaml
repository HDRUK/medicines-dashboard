
name: Build and Deploy to Cloud Run

on:
  push:
    paths:
    - 'RELEASE.version'

env:
  PROJECT_ID: '${{ secrets.PROJECT_ID }}' # TODO: update Google Cloud project id.
  GAR_LOCATION: '${{ secrets.GAR_LOCATION }}' # TODO: update Artifact Registry location
  SERVICE: '${{ secrets.SERVICE_NAME }}' # TODO: update Cloud Run service name
  REGION: '${{ secrets.SERVICE_REGION }}' # TODO: update Cloud Run service region
  DOCKER_USER: '${{ secrets.DOCKER_AUTH_USER }}'
  APP_NAME: medicines-dashboard
  # VERSION: v1.0.0

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'
      pull-requests: 'write'
      checks: 'write'

    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Read VERSION file
        id: getversion
        run: echo "::set-output name=version::$(cat RELEASE.version)"
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: v${{ steps.getversion.outputs.version }}.${{ github.run_id }}
          prerelease: false    

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' 
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Login to GAR
        uses: docker/login-action@v2
        with:
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.PROJECT_ID }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Build and Push Container
        shell: bash
        env: 
          GAR_LOCATION: '${{ secrets.GAR_LOCATION }}'
          SERVICE: '${{ secrets.SERVICE_NAME }}'
          PROJECT_ID: '${{ secrets.PROJECT_ID }}'
          
        run: |-
          docker build -t europe-west1-docker.pkg.dev/hdruk-gateway-dev/hdruk-gateway/$APP_NAME:${{ steps.getversion.outputs.version }} ./
          docker push europe-west1-docker.pkg.dev/hdruk-gateway-dev/hdruk-gateway/$APP_NAME:v${{ steps.getversion.outputs.version }}

      # END - Docker auth and build
